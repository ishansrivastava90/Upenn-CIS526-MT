Невидимост  Вирусите, използващи този похват, се стремят да останат незабелязани за потребителя и другите програми.  Обикновено вирусът подменя част от системна подпрограма, която може да бъде използвана за неговото откриване.  Променената подпрограма съдържа инструкции да игнорира и да не докладва намерения вирус.  За повече информация за тази техника вижте руткит. Затрудняване на разпознаването Антивирусните програми разпознават даден конкретен вирус по характерна част от неговата програма.  За да не бъдат разпознати, някои вируси променят подредбата на инструкциите в програмата си, запазвайки крайния резултат от тяхното изпълнение.  Тези вируси се наричат полиморфни или мутиращи, но за разлика от общоприетото значение на думата мутация, тези вируси не включват промяна на поведението си след мутиране.Önceden bilgisayar bilimcileri kendi çalışmalarını sekteye uğratan birçok kısıtlamalarla karşı karşıya kaldılar.  Programlar alt düzey dillerle yazılmış ve mevcut depolanan alan küçüktü. Bu sebeple güçlü alt düzey buyruklar her zaman bilim adamları tarafından en çok ilgilenilen konu oldu çünkü güçlü buyruklar kolay programlanabilir ve bellekte az yer kaplar öte yandan daha güçlü buyruklar büyük ve hantal olan daha karmaşık donanımsal yorumlayıcılar gerektirir. Bilgisayarın denetim parçaları yani elektronik parçaların mantık kapılarına dönüştürülmesi 60’ların öncesinde yapılandırıldı. Bilgisayarların inşasının özellikle denetim mantığının karmaşık ve hata eğilimli olduğunun kısa zamanda farkına varılmıştır bu yüzden hataları azaltmak ve ileri sistem yapılandırılması yapmak için birtakım teknikler geliştirildi. Bunun rağmen hala karmaşıktır ve hataları da düzeltmek zordur.  1947’de MIT Whirlwind tasarımı, bilgisayar tasarımını kolaylaştıran ve “amaca özel-niyete mahsus” olan yöntemlerin ötesine geçmek için bir yol olan denetim belleği fikri ile tanıştı. Denetim belleği iki boyutlu bir kafestir. Bir boyut MİB dahili saatinden “denetim zamanı vuruşları” olarak kabul edildi, diğeri ise kapılar ve diğer akımlar üzerindeki denetim sinyallerine bağlıdır. “Vuruş dağıtıcı”, MİB saati tarafından oluşturulan vuruşları alır ve her biri kafesin farklı bir satırını etkinleştiren sekiz parça zaman vuruşuna böler. Satırlar etkinleştiği zaman, kendisine bağlı olan denetim sinyallerini etkinleştirir. Başka bir yoldan açıklarsak, sinyaller denetim belleğinden ardışık bir şekilde yayılır ve bitlerden kurulan çok geniş kelime dizisi tarafından kontrol edilir. Mikroprogramlama karmaşık yorumlayıcılara alternatif olarak 1951 yılında Maurice V. Wilkes tarafından ileri sürüldü. Wilkes’ in tasarısı bir sonraki buyruğu gidip ana programdan alıp getiren, buyruğu çözümleyen ve buyrukları çalıştırmak için gerekli donanımsal işleri gerçekleştiren fiziksel bağlantılı bir program uygulamakla ilgilidir. Bu denetim yolu tasarımını fazlasıyla kolaylaştırır. Bu tasarıya göre mikroprogram merkezi işlem birimi üzerindeki bir bellek dizisinde saklanmalı ve hemen hemen olağan programlama teknikleri ile tasarlanmalı daha sonra da teller ve kapılarla gerçekleştirilmelidir. 1951’de Maurice Wilkes bu konuya “koşullu uygulamayı” ekleyerek geliştirdi. Onun başlangıç uygulaması bir çift matris içerir. İkinci matris bir sonraki devire geçen sinyal satırını seçerken, birincisi Whirlwind denetim belleği şeklinde sinyaller üretir. İkinci matristen alternatifler seçebilen koşullular denetim belleğinde tek bir hat geliştirilerek uygulandı. Bu yakalanan dahili sinyallerde koşullu denetim sinyalleri oluşturur. Wilkes bu özelliği açıklamak ve bunu basit bir denetim belleğinden ayırmak için mikroprogramlama terimini keşfetti.