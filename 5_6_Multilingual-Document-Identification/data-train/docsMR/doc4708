As gramáticas libres de contexto permiten describir a maioría dos linguaxes de programación, de feito, a sintaxe da maioría de linguaxes de programación está definida mediante gramáticas libres de contexto. Doutra banda, estas gramáticas son suficientemente simples como para permitir o deseño de eficientes algoritmos de análises sintáctico que, para unha cadea de caracteres dada determinen como pode ser xerada desde a gramática. Os analizadores LL e LR tratan restrinxidos subconxuntos de gramáticas libres de contexto. A notación máis frecuentemente utilizada para expresar gramáticas libres de contexto é a forma Backus-Naur. T xera todas as cadeas coa mesma cantidade de letras a que b, ou xera todas as cadeas con máis letras a, e V todas as cadeas con máis letras b. A gramática de Lojban, unha linguaxe artificial falado con gran capacidade expresiva, é tamén libre de contexto e non ambiguo. O lingüista indio Panini describiu o sánscrito usando unha gramática libre de contexto. Recentemente suxeriuse que unha clase de poesía támil chamada Venpa utiliza principalmente unha gramática libre de contexto. A distinción entre derivación pola esquerda e pola dereita é importante porque na maioría de analizadores, a transformación da entrada é definida dando unha parte de código para cada produción que é executada cando a regra é aplicada. De modo que é importante saber que derivación aplica o analizador, por que determina a orde no que o código será executado. Se para unha cadea da linguaxe dunha gramática hai máis dunha árbore posible, entón dise que a gramática é ambigua. Normalmente estas gramáticas son máis difíciles de analizar por que o analizador non pode decidir sempre que produción aplicar. Un dos máis sinxelos é o de decidir se unha gramática libre do contexto dada acepta a linguaxe de todas as posibles cadeas de símbolos. Esta linguaxe vén ser unha redución do problema de parada dunha máquina de Turing cunha entrada particular, e polo tanto, un problema indecidible. A redución usa o concepto de historia computacional, é dicir, unha cadea que describa o proceso de computación global dunha máquina de Turing, esta cadea podería describirse mediante unha gramática libre do contexto.  Podemos construír, xa que logo, unha gramática libre do contexto que xere todas as cadeas non aceptadas pola máquina de Turing indicada. Unha consecuencia importante é que tamén é indecidible a comparación entre dúas gramáticas libres do contexto para comprobar se a linguaxe xerada coincide. Pola contra, o problema sinxelo de determinar se dada unha cadea é aceptada por unha determinada gramática libre do contexto, si que é decidible, e polo tanto poderá escribirse o correspondente algoritmo para decidilo.