Adatbázis-tervezés alatt jellemzően logikai adatbázis-tervezést értünk, hiszen az esetek túlnyomó többségében az adatbázis-kezelő rendszerek nem teszik lehetővé a fizikai struktúra lényeges befolyásolását. Adatbázis-tervezés kapcsán tipikusan relációs adatbázis-tervezést szokás érteni két okból is. Egyrészt ami a relációs adatbázisokra helyes tervezési módszer és nézőpont, az jellemzően a többi adatmodell alapján felépített adatbázisokra is alkalmazható, másrészt mert ez leggyakoriabb adatbázisfajta. A tervezést alapvetően meghatározza, hogy milyen információs egységekkel szeretnénk dolgozni, illetve az egyes adatelemek között milyen mélyebb összefüggés adott. Ezen lépések egyike sem formalizálható, nincs általános algoritmus a megoldásukra, hiszen az adatbázisokban bármilyen ismeretet leírhatunk, tárolhatunk, lényegében korlátozás nélkül. Miért kell a funkcionális függőségek okozta redundanciát csökkenteni? Azért, mert bizonyos változtatások az adatbázisban ellentmondásos adatokat eredményezhetnek, de legalábbis nem kívánatos állapotba juttatják az adatbázist. A relációs adatbázisok esetében pontosan akkor és csak akkor léphet fel valamilyen anomália, ha az adatbázis-szerkezet redundáns. Anomáliának nevezünk minden olyan jelenséget, amely egy adatbázis használata során nem kívánatos melléktermékként jelenik meg. A beszúrási anomália – a fentieknek megfelelően – az a jelenség, amikor a beszúrás mellékhatásaként nem kívánt hatást váltunk ki az adatbázisban. A fenti példában mondjuk Gipsz Jakab egy újabb telefonszámához például a "4321 – Mellék utca 3." bejelentett lakcímet írnánk fel, akkor bizony a továbbiakban nem tudhatjuk, hogy mi Gipsz Jakab tényleges lakcíme. Ezt a jelenséget beszúrási anomáliának nevezzük. Persze, az is előfordulhat, hogy Gipsz Jakab mindkét telefonszámát töröljük az adatbázisunkból, amit a megfelelő rekordok törlésével valósítunk. Ebben az esetben azzal a kellemetlen élménnyel szembesülhetünk, hogy Gipsz Jakab ismert lakcímét is töröltük, holott ez eredetileg nem volt feltétlenül szándékunkban. A jelenséget törlési anomáliának nevezzük. A probléma elkerülésére érdemes particionálni a fenti táblát, de abban az esetben – látni fogjuk – a helyreállítás okozhat gondot. Tegyük fel, hogy valamiért Gipsz Jakab 1234567890 telefonszámához tartozó címét meg akarjuk változtatni. Mivel a név szükségszerűen meghatározza a feltételezésünk szerint a bejelentett lakcímet, így a lakcím valamilyen más értékbe állításának eredményeképpen ismét ellentmondásos, de legalábbis nem teljes adatbázis keletkezik. Ez a jelenség a módosítási anomália.